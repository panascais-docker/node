name: update
on:
  workflow_dispatch:
  schedule:
    - cron: "0,30 * * * *"

jobs:
  update:
    name: update
    runs-on: ubuntu-latest
    outputs:
      main: ${{steps.update.outputs.result}}
    steps:
      - name: pull repository
        id: repository
        uses: actions/checkout@master

      - name: install dependencies
        id: dependencies
        run: npm install got@11

      - name: run update script
        id: update
        uses: actions/github-script@master
        with:
          script: |
            const update = require('.github/scripts/update.js');
            const result = await update.run();
            console.log(result);
            return result;
          result-encoding: string

      - name: commit the changes
        id: commit
        if: steps.update.outputs.result == 'continue'
        working-directory: .
        run: |
          git config user.name 'github-actions[bot]';
          git config user.email 'github-actions[bot]@users.noreply.github.com';
          git add configuration/versions.json;
          git add configuration/checksums.json;
          git commit -m "Update configuration files";
          git push origin master;

  deploy:
    name: deploy-${{ matrix.node }}
    needs: [update]
    if: needs.update.outputs.main == 'continue'
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      matrix:
        node: [8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, latest, lts]
    steps:
      - name: pull repository
        uses: actions/checkout@v3
        id: repository

      - name: setup docker qemu
        uses: docker/setup-qemu-action@v2
        id: qemu

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: install dependencies
        id: dependencies
        run: |
          sudo apt install jq -y

      - name: update repository
        id: update-repository
        run: |
          git pull origin master

      - name: build and push the docker container image
        id: build
        working-directory: ./${{ matrix.node }}
        run: |
          echo "${DOCKER_REGISTRY_TOKEN}" | docker login -u "${DOCKER_REGISTRY_USERNAME}" --password-stdin
          echo "${QUAY_REGISTRY_TOKEN}" | docker login quay.io -u "${QUAY_REGISTRY_USERNAME}" --password-stdin
          echo "${CONTAINER_REGISTRY_TOKEN}" | docker login ghcr.io -u "${CONTAINER_REGISTRY_USERNAME}" --password-stdin

          docker buildx create --use

          if [ ${{ matrix.node }} -le 10 ]; then
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --push \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VCS_REF=`git rev-parse --short HEAD` \
              -t panascais/node:${{ matrix.node }} \
              -t quay.io/panascais/node:${{ matrix.node }} \
              -t ghcr.io/panascais-docker/node/node:${{ matrix.node }} \
              .;
          elif [ ${{ matrix.node }} -le 18 ]; then
            docker buildx build \
              --platform linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7,linux/ppc64le,linux/s390x \
              --push \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VCS_REF=`git rev-parse --short HEAD` \
              -t panascais/node:${{ matrix.node }} \
              -t quay.io/panascais/node:${{ matrix.node }} \
              -t ghcr.io/panascais-docker/node/node:${{ matrix.node }} \
              .;
          else
            docker buildx build \
              --platform linux/amd64,linux/arm64,linux/ppc64le,linux/s390x \
              --push \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VCS_REF=`git rev-parse --short HEAD` \
              -t panascais/node:${{ matrix.node }} \
              -t quay.io/panascais/node:${{ matrix.node }} \
              -t ghcr.io/panascais-docker/node/node:${{ matrix.node }} \
              .;
          fi;
        env:
          CONTAINER_REGISTRY_TOKEN: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
          CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          QUAY_REGISTRY_TOKEN: ${{ secrets.QUAY_REGISTRY_TOKEN }}
          QUAY_REGISTRY_USERNAME: ${{ secrets.QUAY_REGISTRY_USERNAME }}

  notify-ci-node:
    name: notify-ci-node
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: start ci-node workflow
        id: push-ci-node
        run: |
          curl -XPOST -u "${{ secrets.PANASCAIS_CI_NODE_USERNAME}}:${{secrets.PANASCAIS_CI_NODE_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/panascais-docker/ci-node/actions/workflows/main.yml/dispatches --data '{"ref": "master"}';
